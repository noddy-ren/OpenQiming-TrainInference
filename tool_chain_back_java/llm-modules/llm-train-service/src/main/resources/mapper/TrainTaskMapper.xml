<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctdi.cnos.llm.train.dao.TrainTaskDao">

    <sql id="select_columns">
        a.id,
        a.name,
        a.model_id,
        a.method,
        a.data_set_id,
        <!-- a.param,  -->
        a.creator_id,
        a.create_date,
        a.modifier_id,
        a.modify_date,
        a.status,
        a.region_name,
        a.iterate_total,
        a.iterate_curr,
        a.runtime,
        a.remain_time,
        a.result,
        a.type,
        a.region_code,
        <!-- a.training_loss, -->
        a.submit_status,
        a.train_target,
        a.classify,
        a.parent_id,
        a.project_id,
        a.instruction,
        a.group_id,
        a.version_num,
        a.version_enable
    </sql>

    <select id="queryList" resultType="com.ctdi.cnos.llm.beans.train.trainTask.TrainTaskVO">
        select
        <include refid="select_columns"/>,
        <!-- a.param as paramStr, -->
        b."name" as modelName,
        (select d.name from train.mm_train_task d where d.id = a.parent_id) parentName,
        (select u.user_name from meta.mm_user u where u.id = a.creator_id) creatorName
        <if test="task !=null and task.selectStatus != null and task.selectStatus !=''">
            ,(select count(1) from train.mm_train_task t where t.status = #{task.selectStatus} and a.status =
            #{task.selectStatus} and t.create_date &lt; a.create_date) waitCount
        </if>
        from train.mm_train_task a
        left join meta.mm_model b on a.model_id =b.id
        <where>
            <if test="task !=null and task.id != null and task.id !=''">
                and a.id = #{task.id}
            </if>
            <if test="task !=null and task.name != null and task.name !=''">
                and upper(a.name) like concat('%', upper(#{task.name}), '%')
            </if>
            <if test="task !=null and task.modelId != null and task.modelId !=''">
                and a.model_id = #{task.modelId}
            </if>
            <if test="task !=null and task.modelName != null and task.modelName !=''">
                and upper(b.name) like concat('%', upper(#{task.modelName}), '%')
            </if>
            <if test="task !=null and task.parentId != null and task.parentId !=''">
                and a.parent_id = #{task.parentId}
            </if>
            <if test="task !=null and task.parentName != null and task.parentName !=''">
                and exists (select 1 from train.mm_train_task parent where parent.id = a.parent_id and upper(parent.name) like concat('%', upper(#{task.parentName}), '%'))
            </if>
            <choose>
                <when test='task !=null and task.resourceOccupy != null and  task.resourceOccupy == "0"'>
                    and (a.status = 'training' or exists (select 1 from train.mm_deploy_task c where a.id = c.model_id
                    and c.status in ('completed','deploying')))
                </when>
                <otherwise>
                    <if test="task !=null and task.status != null and task.status !=''">
                        and a.status = #{task.status}
                    </if>
                </otherwise>
            </choose>
            <if test="task !=null and task.trainTarget != null and task.trainTarget !=''">
                and a.train_target = #{task.trainTarget}
            </if>
            <if test="task !=null and task.type != null and task.type !=''">
                and a.type = any(string_to_array(#{task.type}, ','))
            </if>
            <if test="task !=null and task.classify != null and task.classify !=''">
                and a.classify = any(string_to_array(#{task.classify}, ','))
            </if>
            <if test="task !=null and task.taskOrGroup != null and task.taskOrGroup == 'task'">
                and a.project_id is null
            </if>
            <if test="task !=null and task.dataScopeSql != null and task.dataScopeSql !=''">
                ${task.dataScopeSql}
            </if>
            <if test="task !=null and task.idsOrGroupIds != null and task.idsOrGroupIds.size() > 0">
                and (a.id in
                <foreach collection="task.idsOrGroupIds" item="id" index="index" open="(" separator="," close=")">
                    #{id}
                </foreach>
                or a.group_id in
                <foreach collection="task.idsOrGroupIds" item="id" index="index" open="(" separator="," close=")">
                    #{id}
                </foreach>)
            </if>
        </where>
        order by a.modify_date desc
    </select>

    <select id="queryListByCategory" resultType="com.ctdi.cnos.llm.beans.train.trainTask.TrainTaskVO">
        select
            a.id as id,
            a.name as name,
            a.region_code as regionCode,
            a.project_id as projectId,
            a.creator_id as creatorId,
            a.create_date as createDate,
            a.status as status,
            a.model_id as modelId,
            a.parent_id as parentId,
            a.train_target as trainTarget,
            a.type as type,
            a.classify as classify,
            a.modifier_id as modifierId,
            a.modify_date as modifyDate,
            a.task_or_group as taskOrGroup,
            b."name" as modelName
        from(select mtt.id,mtt.name,mtt.region_code,mtt.project_id,mtt.creator_id,mtt.create_date,mtt.status,
                    mtt.model_id,mtt.parent_id,mtt.train_target,mtt.type,mtt.classify,mtt.modifier_id,mtt.modify_date,'task' as task_or_group
             from train.mm_train_task mtt
             where mtt.group_id is null
             union all
             select mtg.id,mtg.name,mtg.region_code,mtg.project_id,mtg.creator_id,mtg.create_date,mtg.deploy_status as status,
                    mtg.model_id,mtg.parent_id,mtg.train_target,mtg.type,mtg.classify,mtg.modifier_id,mtg.modify_date,'group' as task_or_group
             from train.mm_task_group mtg) a
            left join meta.mm_model b on a.model_id =b.id
        <where>
            <if test="task !=null and task.id != null and task.id !=''">
                and a.id = #{task.id}
            </if>
            <if test="task !=null and task.name != null and task.name !=''">
                and upper(a.name) like concat('%', upper(#{task.name}), '%')
            </if>
            <if test="task !=null and task.modelId != null and task.modelId !=''">
                and a.model_id = #{task.modelId}
            </if>
            <if test="task !=null and task.modelName != null and task.modelName !=''">
                and upper(b.name) like concat('%', upper(#{task.modelName}), '%')
            </if>
            <if test="task !=null and task.parentId != null and task.parentId !=''">
                and a.parent_id = #{task.parentId}
            </if>
            <if test="task !=null and task.projectId != null and task.projectId !=''">
                and a.project_id = #{task.projectId}
            </if>
            <if test="task !=null and task.parentName != null and task.parentName !=''">
                and exists (select 1 from train.mm_train_task parent where parent.id = a.parent_id and upper(parent.name) like concat('%', upper(#{task.parentName}), '%'))
            </if>
            <choose>
                <when test='task !=null and task.resourceOccupy != null and  task.resourceOccupy == "0"'>
                    and (a.status = 'training' or exists (select 1 from train.mm_deploy_task c where a.id = c.model_id
                    and c.status in ('completed','deploying')))
                </when>
                <otherwise>
                    <if test="task !=null and task.status != null and task.status !=''">
                        and a.status = #{task.status}
                    </if>
                </otherwise>
            </choose>
            <if test="task !=null and task.trainTarget != null and task.trainTarget !=''">
                and a.train_target = #{task.trainTarget}
            </if>
            <if test="task !=null and task.type != null and task.type !=''">
                and a.type = any(string_to_array(#{task.type}, ','))
            </if>
            <if test="task !=null and task.classify != null and task.classify !=''">
                and a.classify = any(string_to_array(#{task.classify}, ','))
            </if>
            <if test="task !=null and task.dataScopeSql != null and task.dataScopeSql !=''">
                ${task.dataScopeSql}
            </if>
        </where>
        order by a.modify_date desc
    </select>

    <select id="queryById" parameterType="Long" resultType="com.ctdi.cnos.llm.beans.train.trainTask.TrainTaskVO">
        select
        <include refid="select_columns"/>,
        a.training_loss,
        a.loss_trend,
        a.param as paramStr,
        b."name" as modelName,
        (select d.name from train.mm_train_task d where d.id = a.parent_id) parentName,
        (select u.user_name from meta.mm_user u where u.id = a.creator_id) creatorName,
        c.data_set_name as dataSetName
        from train.mm_train_task a
        left join meta.mm_model b on a.model_id = b.id
        left join meta.mm_data_set c on a.data_set_id = c.id
        where a.id = #{id}
    </select>

    <select id="statusCount" resultType="com.ctdi.cnos.llm.beans.train.trainTask.TrainTaskVO">
        select a.status as status,
        count(1) as statusCount
        from train.mm_train_task a
        where 1=1
        <if test="dataScopeSql != null and dataScopeSql !=''">
            ${dataScopeSql}
        </if>
        group by a.status
    </select>

    <select id="countByDataSetId" resultType="Long">
        select count(1) as dataSetCount
        from train.mm_train_task a
        where a.data_set_id = #{dataSetId}
        <if test="status != null and status != ''">
            and a.status = #{status}
        </if>
    </select>

    <select id="countTrainTaskGroupByProvince" resultType="com.ctdi.cnos.llm.beans.meta.operationCenter.BarCharts">
        with all_provinces as (
            select "name" as province_name, abbreviation from meta.mm_province
            where name != '集团'
            union all
            select '其他' as province_name, 'OTHER' as abbreviation
        ),
        train_group as (
            select t1.proAbbr, COUNT(1) as total from
            (
                select mtt.id as trainId, mtt."name",
                case
                    when mu.belong not in (select abbreviation from meta.mm_province where name != '集团') then 'OTHER'
                    else mu.belong
                end as proAbbr
                from train.mm_train_task mtt
                left join meta.mm_user mu on mtt.creator_id = mu.id
                where 1 = 1
                <if test="month == 0">
                    AND mtt.create_date &gt;= #{startTime} AND mtt.create_date &lt;= #{endTime}
                </if>
            ) t1
            group by t1.proAbbr
        )
        select ap.abbreviation, ap.province_name as province, coalesce(tg.total,0) as count
        from all_provinces ap
        left join train_group tg on tg.proabbr = ap.abbreviation
        order by coalesce(tg.total,0) desc
    </select>

    <update id="updateStatusBatch" parameterType="com.ctdi.cnos.llm.beans.train.trainTask.TrainTask">
        <foreach collection="taskList" item="item" index="index" separator=";">
            update train.mm_train_task
            <set>
                <if test="item.status != null and item.status != ''">
                    status = #{item.status},
                </if>
                <if test="item.result != null and item.result != ''">
                    "result" = #{item.result},
                </if>
                <if test="item.modifierId != null">
                    modifier_id = #{item.modifierId},
                </if>
                <if test="item.modifyDate != null">
                    modify_date = #{item.modifyDate},
                </if>
            </set>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>

</mapper>